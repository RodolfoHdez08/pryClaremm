{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodol\\\\OneDrive\\\\Documentos\\\\giasweb-main\\\\giasweb-main\\\\frontend\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [passwordRequirementsMet, setPasswordRequirementsMet] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setMessage('Las contraseñas no coinciden');\n      return;\n    }\n    const token = searchParams.get('token');\n    console.log(\"Token:\", token); // Verificar que se recibe el token\n    console.log(\"New Password:\", newPassword); // Verificar que se recibe la nueva contraseña\n\n    try {\n      const response = await fetch('http://localhost:5000/api/password/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      const result = await response.json();\n      setMessage(result.message);\n      if (response.ok) {\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000);\n      }\n    } catch (error) {\n      setMessage('Error al restablecer la contraseña.');\n    }\n  };\n\n  // Función para manejar la visibilidad de la contraseña\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  // Función para validar los requisitos de la contraseña\n  const validatePassword = password => {\n    const requirements = [{\n      regex: /.{8,}/,\n      message: 'Debe tener al menos 8 caracteres'\n    }, {\n      regex: /[A-Z]/,\n      message: 'Debe incluir al menos una letra mayúscula'\n    }, {\n      regex: /[0-9]/,\n      message: 'Debe incluir al menos un número'\n    }, {\n      regex: /[^A-Za-z0-9]/,\n      message: 'Debe incluir al menos un carácter especial'\n    }];\n    const unmetRequirements = requirements.filter(requirement => !requirement.regex.test(password));\n    setPasswordRequirementsMet(unmetRequirements);\n  };\n  const handlePasswordChange = e => {\n    const value = e.target.value;\n    setNewPassword(value);\n    validatePassword(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: newPassword !== confirmPassword ? 'error-message' : 'success-message',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nueva Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: passwordVisible ? 'text' : 'password',\n              value: newPassword,\n              onChange: handlePasswordChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-password\",\n              onClick: togglePasswordVisibility,\n              children: passwordVisible ? '°°' : '°'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-requirements\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: passwordRequirementsMet.map((requirement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: 'gray'\n              },\n              children: requirement.message\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirmar Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Restablecer Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"ZVSXMwSbo0lS5zuEarzthY04CKA=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","passwordRequirementsMet","setPasswordRequirementsMet","searchParams","passwordVisible","setPasswordVisible","navigate","handleSubmit","e","preventDefault","token","get","console","log","response","fetch","method","headers","body","JSON","stringify","result","json","ok","setTimeout","error","togglePasswordVisibility","validatePassword","password","requirements","regex","unmetRequirements","filter","requirement","test","handlePasswordChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","map","index","style","color","_c","$RefreshReg$"],"sources":["C:/Users/rodol/OneDrive/Documentos/giasweb-main/giasweb-main/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [passwordRequirementsMet, setPasswordRequirementsMet] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      setMessage('Las contraseñas no coinciden');\n      return;\n    }\n\n    const token = searchParams.get('token');\n    console.log(\"Token:\", token);  // Verificar que se recibe el token\n    console.log(\"New Password:\", newPassword);  // Verificar que se recibe la nueva contraseña\n\n    try {\n      const response = await fetch('http://localhost:5000/api/password/reset-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token, newPassword }),\n      });\n\n      const result = await response.json();\n      setMessage(result.message);\n\n      if (response.ok) {\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000);\n      }\n    } catch (error) {\n      setMessage('Error al restablecer la contraseña.');\n    }\n  };\n\n  // Función para manejar la visibilidad de la contraseña\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  // Función para validar los requisitos de la contraseña\n  const validatePassword = (password) => {\n    const requirements = [\n      { regex: /.{8,}/, message: 'Debe tener al menos 8 caracteres' },\n      { regex: /[A-Z]/, message: 'Debe incluir al menos una letra mayúscula' },\n      { regex: /[0-9]/, message: 'Debe incluir al menos un número' },\n      { regex: /[^A-Za-z0-9]/, message: 'Debe incluir al menos un carácter especial' },\n    ];\n\n    const unmetRequirements = requirements.filter((requirement) => !requirement.regex.test(password));\n    setPasswordRequirementsMet(unmetRequirements);\n  };\n\n  const handlePasswordChange = (e) => {\n    const value = e.target.value;\n    setNewPassword(value);\n    validatePassword(value);\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <div className=\"reset-password-form\">\n        <h2>Restablecer Contraseña</h2>\n        {message && (\n          <p className={newPassword !== confirmPassword ? 'error-message' : 'success-message'}>\n            {message}\n          </p>\n        )}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Nueva Contraseña:</label>\n            <div className=\"password-input-container\">\n              <input\n                type={passwordVisible ? 'text' : 'password'}\n                value={newPassword}\n                onChange={handlePasswordChange}\n                required\n              />\n              <span className=\"toggle-password\" onClick={togglePasswordVisibility}>\n                {passwordVisible ? '°°' : '°'}\n              </span>\n            </div>\n          </div>\n          <div className=\"password-requirements\">\n            <ul>\n              {passwordRequirementsMet.map((requirement, index) => (\n                <li key={index} style={{ color: 'gray' }}>\n                  {requirement.message}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"form-group\">\n            <label>Confirmar Contraseña:</label>\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-btn\">Restablecer Contraseña</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}