{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodol\\\\OneDrive\\\\Documentos\\\\giasweb-main\\\\giasweb-main\\\\frontend\\\\src\\\\components\\\\PolicyCrud.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport API_URL from '../apiConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PolicyCrud = () => {\n  _s();\n  const [policies, setPolicies] = useState([]); // Lista de políticas\n  const [newPolicy, setNewPolicy] = useState({\n    title: '',\n    content: ''\n  }); // Nueva política\n  const [editingPolicy, setEditingPolicy] = useState(null); // Política en edición\n\n  useEffect(() => {\n    fetchPolicies(); // Cargar todas las políticas al montar el componente\n  }, []);\n\n  // Obtener todas las políticas\n  const fetchPolicies = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/policies`);\n      setPolicies(response.data); // Guardar las políticas en el estado\n    } catch (error) {\n      console.error('Error al obtener las políticas:', error);\n    }\n  };\n\n  // Crear nueva política\n  const handleCreatePolicy = async () => {\n    if (!newPolicy.title || !newPolicy.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n    try {\n      await axios.post(`${API_URL}/policies`, newPolicy); // Crear política en el backend\n      setNewPolicy({\n        title: '',\n        content: ''\n      }); // Reiniciar los campos del formulario\n      fetchPolicies(); // Recargar las políticas\n    } catch (error) {\n      console.error('Error al crear la política:', error);\n    }\n  };\n\n  // Editar una política existente\n  const handleEditPolicy = policy => {\n    setEditingPolicy(policy); // Poner la política en modo edición\n  };\n\n  // Guardar los cambios en una nueva versión de la política editada\n  const handleSavePolicy = async () => {\n    // Verifica que editingPolicy no sea nulo y tenga las propiedades correctas\n    if (!editingPolicy || !editingPolicy.title || !editingPolicy.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n    console.log('Guardando política:', editingPolicy); // Verifica los datos que se enviarán\n\n    try {\n      await axios.put(`${API_URL}/policies/${editingPolicy._id}`, editingPolicy); // Actualizar la política\n      setEditingPolicy(null); // Salir del modo de edición\n      fetchPolicies(); // Recargar las políticas\n    } catch (error) {\n      console.error('Error al guardar la nueva versión de la política:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  // Eliminar una política\n  const handleDeletePolicy = async id => {\n    try {\n      await axios.delete(`${API_URL}/policies/${id}`); // Eliminar política por ID\n      fetchPolicies(); // Recargar las políticas\n    } catch (error) {\n      console.error('Error al eliminar la política:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-crud-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gestionar Pol\\xEDticas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Crear nueva pol\\xEDtica\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo\",\n        value: newPolicy.title,\n        onChange: e => setNewPolicy({\n          ...newPolicy,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenido\",\n        value: newPolicy.content,\n        onChange: e => setNewPolicy({\n          ...newPolicy,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePolicy,\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pol\\xEDticas existentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: policies.map(policy => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editingPolicy && editingPolicy._id === policy._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingPolicy.title,\n            onChange: e => setEditingPolicy({\n              ...editingPolicy,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editingPolicy.content,\n            onChange: e => setEditingPolicy({\n              ...editingPolicy,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSavePolicy,\n            children: \"Guardar nueva versi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingPolicy(null),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [policy.title, \" \", policy.isCurrent && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"(Vigente)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: policy.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Versi\\xF3n: \", policy.version || 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de creaci\\xF3n: \", new Date(policy.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditPolicy(policy),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePolicy(policy._id),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, policy._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(PolicyCrud, \"TuxH3TTjSHYveI1xeljc6iOecus=\");\n_c = PolicyCrud;\nexport default PolicyCrud;\nvar _c;\n$RefreshReg$(_c, \"PolicyCrud\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","PolicyCrud","_s","policies","setPolicies","newPolicy","setNewPolicy","title","content","editingPolicy","setEditingPolicy","fetchPolicies","response","get","data","error","console","handleCreatePolicy","post","handleEditPolicy","policy","handleSavePolicy","log","put","_id","message","handleDeletePolicy","id","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","isCurrent","version","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/rodol/OneDrive/Documentos/giasweb-main/giasweb-main/frontend/src/components/PolicyCrud.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport API_URL from '../apiConfig';\n\nconst PolicyCrud = () => {\n  const [policies, setPolicies] = useState([]); // Lista de políticas\n  const [newPolicy, setNewPolicy] = useState({ title: '', content: '' }); // Nueva política\n  const [editingPolicy, setEditingPolicy] = useState(null); // Política en edición\n\n  useEffect(() => {\n    fetchPolicies(); // Cargar todas las políticas al montar el componente\n  }, []);\n\n  // Obtener todas las políticas\n  const fetchPolicies = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/policies`);\n      setPolicies(response.data); // Guardar las políticas en el estado\n    } catch (error) {\n      console.error('Error al obtener las políticas:', error);\n    }\n  };\n\n  // Crear nueva política\n  const handleCreatePolicy = async () => {\n    if (!newPolicy.title || !newPolicy.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n\n    try {\n      await axios.post(`${API_URL}/policies`, newPolicy); // Crear política en el backend\n      setNewPolicy({ title: '', content: '' }); // Reiniciar los campos del formulario\n      fetchPolicies(); // Recargar las políticas\n    } catch (error) {\n      console.error('Error al crear la política:', error);\n    }\n  };\n\n  // Editar una política existente\n  const handleEditPolicy = (policy) => {\n    setEditingPolicy(policy); // Poner la política en modo edición\n  };\n\n  // Guardar los cambios en una nueva versión de la política editada\n  const handleSavePolicy = async () => {\n    // Verifica que editingPolicy no sea nulo y tenga las propiedades correctas\n    if (!editingPolicy || !editingPolicy.title || !editingPolicy.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n\n    console.log('Guardando política:', editingPolicy); // Verifica los datos que se enviarán\n\n    try {\n      await axios.put(`${API_URL}/policies/${editingPolicy._id}`, editingPolicy); // Actualizar la política\n      setEditingPolicy(null); // Salir del modo de edición\n      fetchPolicies(); // Recargar las políticas\n    } catch (error) {\n      console.error('Error al guardar la nueva versión de la política:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  // Eliminar una política\n  const handleDeletePolicy = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/policies/${id}`); // Eliminar política por ID\n      fetchPolicies(); // Recargar las políticas\n    } catch (error) {\n      console.error('Error al eliminar la política:', error);\n    }\n  };\n\n  return (\n    <div className=\"policy-crud-container\">\n      <h2>Gestionar Políticas</h2>\n\n      {/* Formulario para crear nueva política */}\n      <div>\n        <h3>Crear nueva política</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Título\"\n          value={newPolicy.title}\n          onChange={(e) => setNewPolicy({ ...newPolicy, title: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Contenido\"\n          value={newPolicy.content}\n          onChange={(e) => setNewPolicy({ ...newPolicy, content: e.target.value })}\n        />\n        <button onClick={handleCreatePolicy}>Crear</button>\n      </div>\n\n      {/* Listado de políticas existentes */}\n      <h3>Políticas existentes</h3>\n      <ul>\n        {policies.map((policy) => (\n          <li key={policy._id}>\n            {editingPolicy && editingPolicy._id === policy._id ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editingPolicy.title}\n                  onChange={(e) => setEditingPolicy({ ...editingPolicy, title: e.target.value })}\n                />\n                <textarea\n                  value={editingPolicy.content}\n                  onChange={(e) => setEditingPolicy({ ...editingPolicy, content: e.target.value })}\n                />\n                <button onClick={handleSavePolicy}>Guardar nueva versión</button>\n                <button onClick={() => setEditingPolicy(null)}>Cancelar</button>\n              </>\n            ) : (\n              <>\n                <h4>{policy.title} {policy.isCurrent && <span>(Vigente)</span>}</h4>\n                <p>{policy.content}</p>\n                <p>Versión: {policy.version || 1}</p>\n                <p>Fecha de creación: {new Date(policy.createdAt).toLocaleString()}</p>\n                <button onClick={() => handleEditPolicy(policy)}>Editar</button>\n                <button onClick={() => handleDeletePolicy(policy._id)}>Eliminar</button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PolicyCrud;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}