{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodol\\\\OneDrive\\\\Documentos\\\\giasweb-main\\\\giasweb-main\\\\frontend\\\\src\\\\components\\\\SloganAdmin.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SloganAdmin = () => {\n  _s();\n  const [slogan, setSlogan] = useState(''); // Estado para manejar el eslogan actual\n  const [error, setError] = useState(null); // Estado para manejar errores\n  const [successMessage, setSuccessMessage] = useState(''); // Mensaje de éxito\n  const [isEditing, setIsEditing] = useState(false); // Estado para saber si se está editando\n\n  const fetchSlogan = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/slogan');\n      if (response.data && response.data.slogan) {\n        setSlogan(response.data.slogan); // Muestra el eslogan si existe\n        setIsEditing(true); // Cambia a modo de edición si ya hay un eslogan\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Error al obtener el eslogan');\n    }\n  };\n  useEffect(() => {\n    fetchSlogan(); // Llama a la función al montar el componente\n  }, []);\n  const handleSloganChange = e => {\n    setSlogan(e.target.value);\n    setError(null); // Resetea el mensaje de error al cambiar el texto\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (slogan.length > 100) {\n      setError('El eslogan no puede tener más de 100 caracteres.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/slogan', {\n        slogan\n      });\n      setSuccessMessage(isEditing ? 'Eslogan actualizado exitosamente.' : 'Eslogan registrado exitosamente.');\n      setIsEditing(true); // Ahora está en modo de edición\n    } catch (error) {\n      console.error(error);\n      setError('Error al guardar el eslogan');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ? 'Editar Eslogan' : 'Registrar Eslogan'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slogan\",\n          children: \"Eslogan:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"slogan\",\n          value: slogan,\n          onChange: handleSloganChange,\n          maxLength: \"100\",\n          placeholder: \"Ingresa el eslogan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [slogan.length, \"/100 caracteres\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? 'Actualizar' : 'Registrar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SloganAdmin, \"KhP6aQiGNZT91bnQ14vVrRPjMWQ=\");\n_c = SloganAdmin;\nexport default SloganAdmin;\nvar _c;\n$RefreshReg$(_c, \"SloganAdmin\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","SloganAdmin","_s","slogan","setSlogan","error","setError","successMessage","setSuccessMessage","isEditing","setIsEditing","fetchSlogan","response","get","data","console","handleSloganChange","e","target","value","handleFormSubmit","preventDefault","length","post","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","onChange","maxLength","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/rodol/OneDrive/Documentos/giasweb-main/giasweb-main/frontend/src/components/SloganAdmin.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst SloganAdmin = () => {\n  const [slogan, setSlogan] = useState(''); // Estado para manejar el eslogan actual\n  const [error, setError] = useState(null); // Estado para manejar errores\n  const [successMessage, setSuccessMessage] = useState(''); // Mensaje de éxito\n  const [isEditing, setIsEditing] = useState(false); // Estado para saber si se está editando\n\n  const fetchSlogan = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/slogan');\n      if (response.data && response.data.slogan) {\n        setSlogan(response.data.slogan); // Muestra el eslogan si existe\n        setIsEditing(true); // Cambia a modo de edición si ya hay un eslogan\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Error al obtener el eslogan');\n    }\n  };\n\n  useEffect(() => {\n    fetchSlogan(); // Llama a la función al montar el componente\n  }, []);\n\n  const handleSloganChange = (e) => {\n    setSlogan(e.target.value);\n    setError(null); // Resetea el mensaje de error al cambiar el texto\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    if (slogan.length > 100) {\n      setError('El eslogan no puede tener más de 100 caracteres.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/slogan', { slogan });\n      setSuccessMessage(isEditing ? 'Eslogan actualizado exitosamente.' : 'Eslogan registrado exitosamente.');\n      setIsEditing(true); // Ahora está en modo de edición\n    } catch (error) {\n      console.error(error);\n      setError('Error al guardar el eslogan');\n    }\n  };\n\n  return (\n    <div>\n      <h2>{isEditing ? 'Editar Eslogan' : 'Registrar Eslogan'}</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n      \n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <label htmlFor=\"slogan\">Eslogan:</label>\n          <input\n            type=\"text\"\n            id=\"slogan\"\n            value={slogan}\n            onChange={handleSloganChange}\n            maxLength=\"100\"\n            placeholder=\"Ingresa el eslogan\"\n            required\n          />\n          <p>{slogan.length}/100 caracteres</p> {/* Mostrar número de caracteres */}\n        </div>\n\n        <button type=\"submit\">{isEditing ? 'Actualizar' : 'Registrar'}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SloganAdmin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}