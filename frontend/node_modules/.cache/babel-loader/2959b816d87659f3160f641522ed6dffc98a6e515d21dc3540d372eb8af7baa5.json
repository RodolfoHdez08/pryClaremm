{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodol\\\\OneDrive\\\\Documentos\\\\pryclaremm\\\\frontend\\\\src\\\\components\\\\TermsCrud.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport API_URL from '../apiConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TermsCrud = () => {\n  _s();\n  const [terms, setTerms] = useState([]); // Lista de términos\n  const [newTerm, setNewTerm] = useState({\n    title: '',\n    content: ''\n  }); // Nuevo término\n  const [editingTerm, setEditingTerm] = useState(null); // Término en edición\n\n  useEffect(() => {\n    fetchTerms(); // Cargar todos los términos al montar el componente\n  }, []);\n\n  // Obtener todos los términos\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/terms`);\n      setTerms(response.data); // Guardar los términos en el estado\n    } catch (error) {\n      console.error('Error al obtener los términos:', error);\n    }\n  };\n\n  // Crear nuevo término\n  const handleCreateTerm = async () => {\n    if (!newTerm.title || !newTerm.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n    try {\n      await axios.post(`${API_URL}/terms`, newTerm); // Crear término en el backend\n      setNewTerm({\n        title: '',\n        content: ''\n      }); // Reiniciar los campos del formulario\n      fetchTerms(); // Recargar los términos\n    } catch (error) {\n      console.error('Error al crear el término:', error);\n    }\n  };\n\n  // Editar un término existente\n  const handleEditTerm = term => {\n    setEditingTerm(term); // Poner el término en modo edición\n  };\n\n  // Guardar los cambios en un nuevo término editado\n  const handleSaveTerm = async () => {\n    if (!editingTerm || !editingTerm.title || !editingTerm.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n    try {\n      await axios.put(`${API_URL}/terms/${editingTerm._id}`, editingTerm); // Actualizar el término\n      setEditingTerm(null); // Salir del modo de edición\n      fetchTerms(); // Recargar los términos\n    } catch (error) {\n      console.error('Error al guardar la nueva versión del término:', error);\n    }\n  };\n\n  // Eliminar un término\n  const handleDeleteTerm = async id => {\n    try {\n      await axios.delete(`${API_URL}/terms/${id}`); // Eliminar término por ID\n      fetchTerms(); // Recargar los términos\n    } catch (error) {\n      console.error('Error al eliminar el término:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"terms-crud-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gestionar T\\xE9rminos y Condiciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Crear nuevo t\\xE9rmino\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo\",\n        value: newTerm.title,\n        onChange: e => setNewTerm({\n          ...newTerm,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenido\",\n        value: newTerm.content,\n        onChange: e => setNewTerm({\n          ...newTerm,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTerm,\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"T\\xE9rminos existentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: terms.map(term => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editingTerm && editingTerm._id === term._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingTerm.title,\n            onChange: e => setEditingTerm({\n              ...editingTerm,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editingTerm.content,\n            onChange: e => setEditingTerm({\n              ...editingTerm,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveTerm,\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingTerm(null),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [term.title, \" (v.\", term.version, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: term.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditTerm(term),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTerm(term._id),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, term._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(TermsCrud, \"wUM7u+mphjBor70jn1WIV83nIq4=\");\n_c = TermsCrud;\nexport default TermsCrud;\nvar _c;\n$RefreshReg$(_c, \"TermsCrud\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","TermsCrud","_s","terms","setTerms","newTerm","setNewTerm","title","content","editingTerm","setEditingTerm","fetchTerms","response","get","data","error","console","handleCreateTerm","post","handleEditTerm","term","handleSaveTerm","put","_id","handleDeleteTerm","id","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","version","_c","$RefreshReg$"],"sources":["C:/Users/rodol/OneDrive/Documentos/pryclaremm/frontend/src/components/TermsCrud.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport API_URL from '../apiConfig';\n\nconst TermsCrud = () => {\n  const [terms, setTerms] = useState([]); // Lista de términos\n  const [newTerm, setNewTerm] = useState({ title: '', content: '' }); // Nuevo término\n  const [editingTerm, setEditingTerm] = useState(null); // Término en edición\n\n  useEffect(() => {\n    fetchTerms(); // Cargar todos los términos al montar el componente\n  }, []);\n\n  // Obtener todos los términos\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/terms`);\n      setTerms(response.data); // Guardar los términos en el estado\n    } catch (error) {\n      console.error('Error al obtener los términos:', error);\n    }\n  };\n\n  // Crear nuevo término\n  const handleCreateTerm = async () => {\n    if (!newTerm.title || !newTerm.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n\n    try {\n      await axios.post(`${API_URL}/terms`, newTerm); // Crear término en el backend\n      setNewTerm({ title: '', content: '' }); // Reiniciar los campos del formulario\n      fetchTerms(); // Recargar los términos\n    } catch (error) {\n      console.error('Error al crear el término:', error);\n    }\n  };\n\n  // Editar un término existente\n  const handleEditTerm = (term) => {\n    setEditingTerm(term); // Poner el término en modo edición\n  };\n\n  // Guardar los cambios en un nuevo término editado\n  const handleSaveTerm = async () => {\n    if (!editingTerm || !editingTerm.title || !editingTerm.content) {\n      console.error('Título y contenido no pueden estar vacíos');\n      return;\n    }\n\n    try {\n      await axios.put(`${API_URL}/terms/${editingTerm._id}`, editingTerm); // Actualizar el término\n      setEditingTerm(null); // Salir del modo de edición\n      fetchTerms(); // Recargar los términos\n    } catch (error) {\n      console.error('Error al guardar la nueva versión del término:', error);\n    }\n  };\n\n  // Eliminar un término\n  const handleDeleteTerm = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/terms/${id}`); // Eliminar término por ID\n      fetchTerms(); // Recargar los términos\n    } catch (error) {\n      console.error('Error al eliminar el término:', error);\n    }\n  };\n\n  return (\n    <div className=\"terms-crud-container\">\n      <h2>Gestionar Términos y Condiciones</h2>\n\n      {/* Formulario para crear nuevo término */}\n      <div>\n        <h3>Crear nuevo término</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Título\"\n          value={newTerm.title}\n          onChange={(e) => setNewTerm({ ...newTerm, title: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Contenido\"\n          value={newTerm.content}\n          onChange={(e) => setNewTerm({ ...newTerm, content: e.target.value })}\n        />\n        <button onClick={handleCreateTerm}>Crear</button>\n      </div>\n\n      {/* Listado de términos existentes */}\n      <h3>Términos existentes</h3>\n      <ul>\n        {terms.map((term) => (\n          <li key={term._id}>\n            {editingTerm && editingTerm._id === term._id ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editingTerm.title}\n                  onChange={(e) => setEditingTerm({ ...editingTerm, title: e.target.value })}\n                />\n                <textarea\n                  value={editingTerm.content}\n                  onChange={(e) => setEditingTerm({ ...editingTerm, content: e.target.value })}\n                />\n                <button onClick={handleSaveTerm}>Guardar</button>\n                <button onClick={() => setEditingTerm(null)}>Cancelar</button>\n              </>\n            ) : (\n              <>\n                <h4>{term.title} (v.{term.version})</h4>\n                <p>{term.content}</p>\n                <button onClick={() => handleEditTerm(term)}>Editar</button>\n                <button onClick={() => handleDeleteTerm(term._id)}>Eliminar</button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TermsCrud;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}