{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodol\\\\OneDrive\\\\Documentos\\\\pryclaremm\\\\frontend\\\\src\\\\componentes\\\\AuditLogs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuditLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const response = await fetch('https://backendgias.onrender.com/api/audit/audit-logs');\n        if (!response.ok) {\n          throw new Error('Error al obtener los registros');\n        }\n        const data = await response.json();\n        setLogs(data);\n      } catch (error) {\n        console.error('Error al obtener los registros:', error);\n        setErrorMessage('No se pudieron cargar los registros.');\n      } finally {\n        setLoading(false); // Cambiar el estado de carga al finalizar\n      }\n    };\n    fetchLogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registros de Inicios de Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), \" \", errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this), logs.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay registros de inicios de sesi\\xF3n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre Completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha y Hora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.nombreCompleto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.correo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(log.fechaHora).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, log._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuditLogs, \"B9+jK+hQe6ZPbmcGe1Vb3Nsq4mw=\");\n_c = AuditLogs;\nexport default AuditLogs;\nvar _c;\n$RefreshReg$(_c, \"AuditLogs\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AuditLogs","_s","logs","setLogs","loading","setLoading","errorMessage","setErrorMessage","fetchLogs","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","nombreCompleto","correo","Date","fechaHora","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/rodol/OneDrive/Documentos/pryclaremm/frontend/src/componentes/AuditLogs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AuditLogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const response = await fetch('https://backendgias.onrender.com/api/audit/audit-logs');\n        if (!response.ok) {\n          throw new Error('Error al obtener los registros');\n        }\n        const data = await response.json();\n        setLogs(data);\n      } catch (error) {\n        console.error('Error al obtener los registros:', error);\n        setErrorMessage('No se pudieron cargar los registros.');\n      } finally {\n        setLoading(false); // Cambiar el estado de carga al finalizar\n      }\n    };\n\n    fetchLogs();\n  }, []);\n\n  return (\n    <div className=\"table-container\">\n      <h2>Registros de Inicios de Sesión</h2>\n      {loading && <p>Cargando...</p>} {/* Mensaje de carga */}\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n      {logs.length === 0 && !loading ? (\n        <p>No hay registros de inicios de sesión.</p>\n      ) : (\n        <table>\n          <thead>\n            <tr>\n              <th>Nombre Completo</th>\n              <th>Correo</th>\n              <th>Fecha y Hora</th>\n            </tr>\n          </thead>\n          <tbody>\n            {logs.map((log) => (\n              <tr key={log._id}>\n                <td>{log.nombreCompleto}</td>\n                <td>{log.correo}</td>\n                <td>{new Date(log.fechaHora).toLocaleString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default AuditLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}